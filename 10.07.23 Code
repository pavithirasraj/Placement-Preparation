Coding Question 1
The function def differenceofSum(n. m) accepts two integers n, m as arguments Find the sum of all numbers in range from 1 to m(both inclusive) that are not divisible by n. Return difference between sum of integers not divisible by n with sum of numbers divisible by n.

Assumption:

n>0 and m>0
Sum lies between integral range
Example

Input
n:4
m:20
Output
90

Explanation

Sum of numbers divisible by 4 are 4 + 8 + 12 + 16 + 20 = 60
Sum of numbers not divisible by 4 are 1 +2 + 3 + 5 + 6 + 7 + 9 + 10 + 11 + 13 + 14 + 15 + 17 + 18 + 19 = 150
Difference 150 – 60 = 90
Sample Input
n:3
m:10
Sample Output
19
-----
CODE:
-----

n = int(input())
m = int(input())
a=0
b=0
for i in range(1,m+1):
    if i%n==0:
        a=a+i
    else:
       b=b+i 
print(abs(b-a))
-----
INPUT:
-----
6 
24
-------
OUTPUT:
--------
180

------------------------------------------------------------------------------------------------------------------------------------------------

Coding Question 2
You are required to implement the following Function def LargeSmallSum(arr). 

The function accepts an integers arr of size ’length’ as its arguments you are required to return the sum of second largest largest element from the even positions and second smallest from the odd position of given ‘arr’.

Assumption:

All array elements are unique
Treat the 0th position a seven
NOTE

Return 0 if array is empty
Return 0, if array length is 3 or less than 3
Example:-

Input

arr:3 2 1 7 5 4

Output

7

Explanation

Second largest among even position elements(1 3 5) is 3
Second largest among odd position element is 4
Thus output is 3+4 = 7
Sample Input

arr:1 8 0 2 3 5 6

Sample Output

8

------
CODE:
------
n=int(input())
lst=list(map(int, input().split()))
evenlst=[]
oddlst=[]
for i in range(n):
    if i%2==0:
        evenlst.append(lst[i])
    else:
        oddlst.append(lst[i])
evenlst.sort()
oddlst.sort()
print(evenlst[len(evenlst)-2]+oddlst[len(oddlst)-2])

------
INPUT:
------
6
7 2 8 1 3 5
------
OUTPUT:
------
9
